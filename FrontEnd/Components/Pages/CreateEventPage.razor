@page "/create-event"
@using Contracts
@using FrontEnd.Infrastructure
@using System.Text.Json
@using FrontEnd.Infrastructure.Authentication
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<AuthorizeComponent AuthService="@AuthService" NavigationManager="NavigationManager"></AuthorizeComponent>

<div class="bg-white w-full flex flex-col h-full max-h-fit">
    <EditForm EditContext="FormContext" class="w-full flex flex-col gap-2 mt-8">
        <ValidationGenericErrorsSummary EditContext="FormContext"/>

        <div class="w-1/4 mx-auto flex text-4xl font-semibold mb-4">
            <span class="mx-auto">Регистрирай ново събитие</span>
        </div>

        <div class="flex flex-col w-1/4 mx-auto">
            <label class="font-semibold">
                Име на събитието: <span class="text-red">*</span>
            </label>
            <InputText @bind-Value="FormInputModel.Name" class="rounded-md px-3 py-1 text-t-color border border-slate-300 focus:border-blue-500 focus:border focus:outline-none"/>
        </div>

        <div class="flex w-1/4 mx-auto gap-2">
            <div class="flex flex-col w-1/2 h-full">
                <label class="font-semibold">
                    Област: <span class="text-red">*</span>
                </label>
                <select @onchange="@OnSelectedRegion" class="bg-white rounded-md px-3 py-1 text-t-color border border-slate-300 focus:border-blue-500 focus:border focus:outline-none">
                    @{
                        foreach (var region in RegionsService.Regions)
                        {
                            <option class="bg-white" value="@region.RegionName">@region.RegionName</option>
                        }
                    }
                </select>
            </div>

            <div class="flex flex-col w-1/2 h-full">
                <label class="font-semibold">
                    Град: <span class="text-red">*</span>
                </label>
                <select @onchange="@OnSelectedCity" class="bg-white rounded-md px-3 py-1 text-t-color border border-slate-300 focus:border-blue-500 focus:border focus:outline-none">
                    @{
                        foreach (var city in RegionsService.Regions.FirstOrDefault(x => x.RegionName == Region)!.Cities)
                        {
                            <option class="bg-white" value="@city">@city</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="flex flex-col w-1/4 mx-auto">
            <label class="font-semibold">
                Адрес: <span class="text-red">*</span>
            </label>
            <InputText @bind-Value="FormInputModel.Address" class="rounded-md px-3 py-1 text-t-color border border-slate-300 focus:border-blue-500 focus:border focus:outline-none"/>
        </div>

        <div class="flex flex-col w-1/4 mx-auto">
            <label class="font-semibold">
                Начало: <span class="text-red">*</span>
            </label>
            <InputDate Type="InputDateType.DateTimeLocal" @bind-Value="FormInputModel.StartTime" class="rounded-md px-3 py-1 text-t-color border border-slate-300 focus:border-blue-500 focus:border focus:outline-none"/>
        </div>

        <div class="flex flex-col w-1/4 mx-auto">
            <label class="font-semibold">
                Информация относно събитието: <span class="text-red">*</span>
            </label>
            <ValidationMessage class="text-sm validation-message" For="() => FormInputModel.Description"></ValidationMessage>
            <InputTextArea @bind-Value="FormInputModel.Description" rows="3" class="resize-none rounded-md px-3 py-1 text-t-color border border-slate-300 focus:border-blue-500 focus:border focus:outline-none"/>
        </div>


        <button type="button" class="bg-secondary w-1/4 mx-auto rounded-lg text-white p-1 text-xl mt-8 pb-2 text-center align-middle items-center" @onclick="@OpenCategoriesModal">
            @{
                var categoriesCount = Categories.Count(x => x.IsSelected);
                string text = categoriesCount > 0 ? $"Избрани ({categoriesCount})" : "Избери категории";
            }
            <span>@text</span>
        </button>

        <button type="submit" class="bg-primary w-1/4 mx-auto rounded-lg text-white p-1 text-xl mt-8 pb-2 text-center align-middle items-center hover:bg-[#348aa7] transition-all">
            <span>@(isLoading ? "Изчакайте..." : "Регистрирай събитие")</span>
        </button>
    </EditForm>
</div>

@code {
    [CascadingParameter]
    public IModalService Modal { get; set; }

    private void OpenCategoriesModal()
    {
        this.Modal.Show<MultipleListModal>(
            (nameof(MultipleListModal.Items), Categories)).Result.ContinueWith(x => {
            if (x.Result.Data != null)
            {
                Console.WriteLine(JsonSerializer.Serialize(x.Result.Data));
            }
            this.StateHasChanged();
        });
    }

    private List<SelectableItem<string>> Categories = new()
    {
        new SelectableItem<string>("asd"),
        new SelectableItem<string>("gsd"),
    };

    private CreateEventFormInputModel FormInputModel { get; set; } = new();
    private EditContext FormContext { get; set; } = null!;
    private ValidationMessageStore ValidationMessageStore { get; set; } = null!;

    protected override void OnInitialized()
    {
        FormContext = new EditContext(FormInputModel);
        ValidationMessageStore = new ValidationMessageStore(FormContext);
        City = "София";
        Region = "София";
    }

    void OnSelectedRegion(ChangeEventArgs e) => this.Region = e.Value.ToString();

    void OnSelectedCity(ChangeEventArgs e) => this.City = e.Value.ToString();

    private bool isLoading;
    string City;
    string Region;
}